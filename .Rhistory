# age
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
RColorBrewer::display.brewer.all()
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Accent") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Dark2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age
ggplot(data, aes(age)) +
geom_bar(aes(fill = age), alpha = 0.8) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age
ggplot(data, aes(age)) +
geom_bar(aes(fill = age), alpha = 0.8) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age
ggplot(data, aes(age)) +
geom_bar(aes(fill = age), alpha = 0.7) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age & stroke
ggplot(data, aes(age)) +
geom_bar() +
facet_grid(rows = vars(age), cols = vars(stroke))
# age & stroke
ggplot(data, aes(age)) +
geom_bar() +
facet_grid(cols = vars(stroke))
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke))
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# data
library(dplyr)
library(ggplot2)
library(Amelia)
library(corrplot)
library(corrgram)
# model
library(caTools)
library(e1071)
library(caret)
library(ROSE)
library(Metrics)
library(class)
library(tidymodels)
library(glmnet)
# read the data
data <- read.csv("healthcare-dataset-stroke-data.csv")
# view the data
head(data)
str(data)
summary(data)
### <span id="3">3. Data Cleaning</span>
```{r}
# check NA values
any(is.na(data)) # it shows there are no missing value
# however there are N/A in bmi, convert them to NA values
data[data == 'N/A'] <- NA
missmap(data, col=c("yellow", "black"), legend=FALSE) # there are missing values on bmi
table(is.na(data)) # there are 201 missing values
# convert bmi data type to numeric
data$bmi <- as.numeric(data$bmi)
# plot bmi
hist(data$bmi)
boxplot(data$bmi)
# drop NA values
data <- na.omit(data)
any(is.na(data)) # check again, there is no NA value now
# drop the id column
data <- data[-1]
head(data)
# data
library(dplyr)
library(ggplot2)
library(Amelia)
library(corrplot)
library(corrgram)
# model
library(caTools)
library(e1071)
library(caret)
library(ROSE)
library(Metrics)
library(class)
library(tidymodels)
library(glmnet)
# read the data
data <- read.csv("healthcare-dataset-stroke-data.csv")
# view the data
head(data)
str(data)
summary(data)
# check NA values
any(is.na(data)) # it shows there are no missing value
# however there are N/A in bmi, convert them to NA values
data[data == 'N/A'] <- NA
missmap(data, col=c("yellow", "black"), legend=FALSE) # there are missing values on bmi
table(is.na(data)) # there are 201 missing values
# convert bmi data type to numeric
data$bmi <- as.numeric(data$bmi)
# plot bmi
hist(data$bmi)
boxplot(data$bmi)
# drop NA values
data <- na.omit(data)
any(is.na(data)) # check again, there is no NA value now
# drop the id column
data <- data[-1]
head(data)
# data transformation
str(data)
# convert character data type to factor
data <- data %>% mutate(across(where(is.character),factor))
# convert hypertension, heart_disease, stroke data type from integer to factor
data$hypertension <- as.factor(data$hypertension)
data$heart_disease <- as.factor(data$heart_disease)
data$stroke <- as.factor(data$stroke)
# binning numeric valuables
# age
ggplot(data, aes(age,y=..density..)) +
geom_histogram(binwidth=1,
color="black",
fill="#02bcfa",
alpha=0.5) +
geom_density() + labs(title="Age Distribution")
boxplot(data$age)
summary(data$age)
# binning age with quantile: 25, 44, 60, 82
data$age <- cut(data$age,
breaks = c(0, 25, 44, 60, 82),
labels=c('young', 'grown', 'mature', 'old'))
# avg glucose level
ggplot(data, aes(avg_glucose_level, y=..density..)) +
geom_histogram(color="black",
fill="#02bcfa",
alpha=0.5) +
geom_density() +
labs(title="Average Glucose Level Distribution")
boxplot(data$avg_glucose_level)
summary(data$avg_glucose_level)
# binning avg glucose level based on the information on website:
# https://my.clevelandclinic.org/health/diagnostics/12363-blood-glucose-test#:~:text=What%20is%20a%20normal%20glucose,can%20be%20%E2%80%9Cnormal%E2%80%9D%20too.
group_glucose <- function(level){
res <- level
for (i in 1:length(level)){
if (level[i] <= 70){
res[i] <- "low"
} else if (level[i] > 70 & level[i] <= 99) {
res[i] <- "normal"
} else if (level[i] > 100 & level[i] <= 125) {
res[i] <- "prediabetes"
} else {
res[i] <- "diabetes"
}
}
return(res)
}
# apply group_glucose function
data$avg_glucose_level <- group_glucose(data$avg_glucose_level)
# convert avg_glucose_level data type to factor
data$avg_glucose_level <- as.factor(data$avg_glucose_level)
# levels of data$avg_glucose_level are in the wrong order
levels(data$avg_glucose_level)
# reorder the levels of data$avg_glucose_level
data$avg_glucose_level <- factor(data$avg_glucose_level, levels = c("low", "normal", "prediabetes", "diabetes"))
# check again
levels(data$avg_glucose_level)
# bmi
ggplot(data, aes(bmi)) +
geom_histogram(color="black",
fill="#02bcfa",
alpha=0.5) +
geom_density() +
labs(title="BMI Distribution")
boxplot(data$bmi)
summary(data$bmi)
# binning BMI based on the information on the CDC website:
# https://www.cdc.gov/healthyweight/assessing/index.html#:~:text=If%20your%20BMI%20is%20less,falls%20within%20the%20obese%20range.
group_bmi <- function(bmi){
res <- bmi
for (i in 1:length(bmi)){
if (bmi[i] < 18.5){
res[i] <- "underweight"
} else if (bmi[i] >= 18.5 & bmi[i] <= 24.9) {
res[i] <- "normal"
} else if (bmi[i] >= 25.0 & bmi[i] <= 29.9) {
res[i] <- "overweight"
} else {
res[i] <- "obese"
}
}
return(res)
}
# apply group_bmi function
data$bmi <- group_bmi(data$bmi)
# convert bmi data type to factor
data$bmi <- as.factor(data$bmi)
# levels of data$bmi are in the wrong order
levels(data$bmi)
# reorder the levels of bmi
data$bmi <- factor(data$bmi, levels = c("underweight", "normal", "overweight", "obese"))
# check the structure
str(data)
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
ggplot(filter(data, stroke == "1"), aes(age)) +
geom_bar(fill="blue",
alpha=0.6)
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke), alpha = 0.8) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender), alpha = 0.7) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender), alpha = 0.7) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender), alpha = 0.8) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender), alpha = 0.9) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender), alpha = 1) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
# Age Group Distribution
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
# Gender Distribution
ggplot(data, aes(gender)) +
geom_bar(aes(fill = gender)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gender", y = "Count", title ="Gender Distribution")
# gender & stroke
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Class Label")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke))
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke)
position = "fill")
geom_bar(aes(fill = stroke +
position = "fill")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke) +
position = "fill")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill") +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Normalize Height")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill") +
scale_fill_brewer(palette = "Set2") +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Normalize Height")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill") +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Normalize Height")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.7) +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Normalize Height")
ggplot(data, aes(gender)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Gneder", y = "Count", title ="Gneder Distribution with Normalize Height")
#
ggplot(data, aes(hypertension)) +
geom_bar(aes(fill = hypertension)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Hypertension", y = "Count", title ="Hypertension Distribution")
# hypertension & stroke
ggplot(data, aes(hypertension)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Hypertension", y = "Count", title ="Hypertension Distribution with Class Label")
# normalize the height
ggplot(data, aes(hypertension)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Hypertension", y = "Count", title ="Hypertension Distribution with Normalize Height")
# Heart Disease Distribution
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = heart_disease)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution")
# Heart Disease Distribution
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = heart_disease)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution")
# heart_disease & stroke
ggplot(filter(data, heart_disease == "1"), aes(stroke)) +
geom_bar(fill="blue",
alpha=0.6)
ggplot(data, aes(heart_disease, fill=stroke)) +
geom_bar(position = "fill",
alpha=0.7)
# heart_disease & stroke
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution with Class Label")
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution with Normalize Height") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3)
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution with Normalize Height") +
geom_text(stat='count', aes(label=..density..), vjust=-0.3)
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Count", title ="Heart Disease Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Density", title ="Heart Disease Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(heart_disease)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Heart Disease", y = "Scaled Count", title ="Heart Disease Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
# normalize the height
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(age, y=..density..)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(age, y=..count..)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
# normalize the height
ggplot(data, aes(age, y=..count..)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3)
# normalize the height
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
# Age Group Distribution
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
# Age Group Distribution
ggplot(data, aes(age)) +
geom_bar(aes(fill = age)) +
scale_fill_brewer(palette = "Set2") +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution")
# age & stroke
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke)) +
scale_fill_brewer(palette = "Set2") +
facet_grid(cols = vars(stroke)) +
geom_text(stat='count', aes(label=..count..), vjust=-0.3) +
labs(x = "Age", y = "Count", title ="Age Group Distribution with Class Label")
# normalize the height
ggplot(data, aes(age)) +
geom_bar(aes(fill = stroke),
position = "fill",
alpha=0.8) +
labs(x = "Age", y = "Scaled Count", title ="Age Distribution with Normalize Height")
